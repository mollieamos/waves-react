{"ast":null,"code":"var _jsxFileName = \"/Users/mollieamos/Documents/Coding/Dev Ed/waves/waves/src/components/player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n\n  // Ref\n  const audioRef = useRef(null); // Event Handler\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  }; // State\n\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duraction: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        min: 0,\n        max: songInfo.duration,\n        value: songInfo.currentTime,\n        onChange: dragHandler,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      onLoadedMetadata: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"ObksiywsTy+PQq6smKP/gjf5t9c=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/mollieamos/Documents/Coding/Dev Ed/waves/waves/src/components/player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","Player","currentSong","isPlaying","setIsPlaying","audioRef","playSongHandler","current","pause","play","timeUpdateHandler","e","target","currentTime","duration","setSongInfo","songInfo","getTime","time","Math","floor","slice","dragHandler","value","duraction","audio"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({ currentSong, isPlaying, setIsPlaying }) => {\n  // Ref\n  const audioRef = useRef(null);\n  // Event Handler\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n  // State\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duraction: 0,\n  });\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          min={0}\n          max={songInfo.duration}\n          value={songInfo.currentTime}\n          onChange={dragHandler}\n          type=\"range\"\n        />\n        <p>{getTime(songInfo.duration)}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}