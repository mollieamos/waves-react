{"ast":null,"code":"var _jsxFileName = \"/Users/mollieamos/Documents/Coding/Dev Ed/waves/waves/src/components/librarySong.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying\n}) => {\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter(state => state.id === id);\n    setCurrentSong({ ...selectedSong[0]\n    }); // Check if the song is playing\n\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: `library-songs ${song.active ? \"selected\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: song.name,\n      src: song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/mollieamos/Documents/Coding/Dev Ed/waves/waves/src/components/librarySong.js"],"names":["React","LibrarySong","song","songs","setCurrentSong","id","audioRef","isPlaying","songSelectHandler","selectedSong","filter","state","playPromise","current","play","undefined","then","audio","active","name","cover","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,KAFmB;AAGnBC,EAAAA,cAHmB;AAInBC,EAAAA,EAJmB;AAKnBC,EAAAA,QALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOd;AACJ,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,YAAY,GAAGN,KAAK,CAACO,MAAN,CAAcC,KAAD,IAAWA,KAAK,CAACN,EAAN,KAAaA,EAArC,CAArB;AACAD,IAAAA,cAAc,CAAC,EAAE,GAAGK,YAAY,CAAC,CAAD;AAAjB,KAAD,CAAd,CAF8B,CAG9B;;AACA,QAAIF,SAAJ,EAAe;AACb,YAAMK,WAAW,GAAGN,QAAQ,CAACO,OAAT,CAAiBC,IAAjB,EAApB;;AACA,UAAIF,WAAW,KAAKG,SAApB,EAA+B;AAC7BH,QAAAA,WAAW,CAACI,IAAZ,CAAkBC,KAAD,IAAW;AAC1BX,UAAAA,QAAQ,CAACO,OAAT,CAAiBC,IAAjB;AACD,SAFD;AAGD;AACF;AACF,GAZD;;AAaA,sBACE;AACE,IAAA,OAAO,EAAEN,iBADX;AAEE,IAAA,SAAS,EAAG,iBAAgBN,IAAI,CAACgB,MAAL,GAAc,UAAd,GAA2B,EAAG,EAF5D;AAAA,4BAIE;AAAK,MAAA,GAAG,EAAEhB,IAAI,CAACiB,IAAf;AAAqB,MAAA,GAAG,EAAEjB,IAAI,CAACkB;AAA/B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKlB,IAAI,CAACiB;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKjB,IAAI,CAACmB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjCD;;KAAMpB,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying,\n}) => {\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter((state) => state.id === id);\n    setCurrentSong({ ...selectedSong[0] });\n    // Check if the song is playing\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then((audio) => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-songs ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}